!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("cloudinary-subtitle-lib",["exports","@angular/core"],t):t(e["cloudinary-subtitle-lib"]={},e.ng.core)}(this,function(e,t){"use strict";var n=function(){function e(){this.BASE_URL="https://res.cloudinary.com/",this.CLOUDINARY_URL_VIDEO_TYPE_EXTENSION="/video/upload/"}return e.prototype.addSubtitlesToVideo=function(e,t,n){var o=this;if(e&&0!==e.length)if(t&&0!==t.length){if(n&&n.subtitles&&0!==n.subtitles.length){var i=this.BASE_URL+e+this.CLOUDINARY_URL_VIDEO_TYPE_EXTENSION;return n.subtitles.map(function(e){i+=o.entryToCloudinaryParams(e)}),i+=t}console.error("Missing or bad appropriate subtitles JSON...\n\n                     the appropriate subtitles JSON should be of type:\n\n                     { subtitles: { 'start-timing': string, 'end-timing': string, text: string }[] }\n\n                     please follow the instructions and try again")}else console.error("Missing appropriate videoPublicId...\n\n                     videoPublicId should be a string which represents the video id provided by cloudinary,\n \n                     please follow the instructions and try again");else console.error("Missing or empty appropriate cloudName...\n                     cloudName should be a string which represents your cloud name provided by cloudinary,\n\n                     please follow the instructions and try again")},e.prototype.entryToCloudinaryParams=function(e){return this.addTextAndPosition(e.text)+this.parseTimeToParam("so_",e["start-timing"])+","+this.parseTimeToParam("eo_",e["end-timing"])+"/"},e.prototype.addTextAndPosition=function(e){return"l_text:Arial_40px:"+encodeURIComponent(encodeURIComponent(e))+",y_60,g_south,b_black,co_white,"},e.prototype.parseTimeToParam=function(e,t){for(var n=t.split(":"),o=0,i=1;0<n.length;)o+=i*parseFloat(n.pop()),i*=60;return e+o},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}();e.CloudinarySubtitleLibService=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=cloudinary-subtitle-lib.umd.min.js.map