!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("cloudinary-subtitle-lib",["exports","@angular/core"],e):e(t["cloudinary-subtitle-lib"]={},t.ng.core)}(this,function(t,e){"use strict";var n=function(){function t(){this.BASE_URL="https://res.cloudinary.com/",this.CLOUDINARY_URL_VIDEO_TYPE_EXTENSION="/video/upload/"}return t.prototype.addSubtitlesToVideo=function(t,e,n){var i=this;if(t&&0!==t.length)if(e&&0!==e.length){if(n&&n.subtitles&&0!==n.subtitles.length){var o=this.BASE_URL+t+this.CLOUDINARY_URL_VIDEO_TYPE_EXTENSION;return n.subtitles.map(function(t,e){t["start-timing"]&&t["end-timing"]&&t.text?o+=i.entryToCloudinaryParams(t):console.error("Bad subtitle format at index "+e+", please make sure that each subtitle is of \n        type: { 'start-timing': string, 'end-timing': string, text: string }")}),o+=e}console.error("Missing or bad appropriate subtitles JSON...\n\n                     the appropriate subtitles JSON should be of type:\n\n                     { subtitles: { 'start-timing': string, 'end-timing': string, text: string }[] }\n\n                     please follow the instructions and try again")}else console.error("Missing appropriate videoPublicId...\n\n                     videoPublicId should be a string which represents the video id provided by cloudinary,\n \n                     please follow the instructions and try again");else console.error("Missing or empty appropriate cloudName...\n                     cloudName should be a string which represents your cloud name provided by cloudinary,\n\n                     please follow the instructions and try again")},t.prototype.entryToCloudinaryParams=function(t){return this.addTextPositionAndStyles(t.text)+this.parseTimeToParam("so_",t["start-timing"])+","+this.parseTimeToParam("eo_",t["end-timing"])+"/"},t.prototype.addTextPositionAndStyles=function(t){return"l_text:Arial_40px:"+encodeURIComponent(encodeURIComponent(t))+",y_60,g_south,b_black,co_white,"},t.prototype.parseTimeToParam=function(t,e){for(var n=e.split(":"),i=0,o=1;0<n.length;)i+=o*parseFloat(n.pop()),o*=60;return t+i},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}();t.CloudinarySubtitleLibService=n,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=cloudinary-subtitle-lib.umd.min.js.map